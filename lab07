#Q1 b)
#include <stdio.h>
int fib( int n ) {

    if (n<2)
        return n;
    else{
        return fib(n-1)+ fib(n-2);
    }
}
int main() {
    int inNum;
    printf("Enter a positive integer: ");
    scanf("%d", &inNum);
    printf("fib(%d) = %d\n", inNum, fib(inNum));
    return 0;
}
#Q2

#include <stdio.h>
#include <stdlib.h>
void drawLine(int n){
	if(n!=0)
	{
		printf("*");
		n--;
		return drawLine(n);
	}
}
int main()
 {
   drawLine(5);
   return 0;
 }

#Q3

#include <stdio.h>
#include <stdlib.h>
int count = 1;

void drawLine(int n){
	if(n!=0)
	{
		printf("*");
		n--;
		return drawLine(n);
	}
}

void drawtriangle(int n){
	if(count <= n){
		drawLine(count);
		printf("\n");
		count++;
		drawtriangle(n);
		}
	}
	
int main()
 {
   drawtriangle(5);
   return 0;
 }
 
 #Q4

#include <stdio.h>
int find_prime = 3, temp = 1,find_fac = 3;

int check(int n) {  // find prime
    if(n <= 2)
        return 1;
    if (n % 2 == 0)
        return 0;
    else if (find_prime < n/2){
        if (n % find_prime == 0){
            find_prime = 3;
            return 0;
        }
        find_prime += 2;
        return check(n);
    }
    else {
        find_prime = 3;
        return 1;
    }
}

void prime_fac(int n){
    if(n == 1){
        return;
    }
    if (check(n) == 1) {
        printf("%d ",n);
        return;
    }
    if (n % 2 == 0){
        printf("2 ");
        return prime_fac(n/2);
    } else if(n%find_fac == 0 ) {
        printf("%d ", find_fac);
        temp = find_fac;
        find_fac = 3;
        return prime_fac(n / temp);
    } else{
        find_fac += 2;
    }


}


int main() {
    prime_fac(21);

}
