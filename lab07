#Q1 b)
#include <stdio.h>
int fib( int n ) {

    if (n<2)
        return n;
    else{
        return fib(n-1)+ fib(n-2);
    }
}
int main() {
    int inNum;
    printf("Enter a positive integer: ");
    scanf("%d", &inNum);
    printf("fib(%d) = %d\n", inNum, fib(inNum));
    return 0;
}
#Q2

#include <stdio.h>
#include <stdlib.h>
void drawLine(int n){
	if(n!=0)
	{
		printf("*");
		n--;
		return drawLine(n);
	}
}
int main()
 {
   drawLine(5);
   return 0;
 }

#Q3

#include <stdio.h>

void drawLine(int n){
    if(n!=0)
    {
        printf("*");
        n--;
        return drawLine(n);
    }
}

void drawtriangle(int n,int count){
    if(count <= n){
        drawLine(count);
        printf("\n");
        count++;
        drawtriangle(n,count);
    }
}

int main()
{
    drawtriangle(5,1);
    return 0;
}


 
 #Q4
#include <stdio.h>

int check(int n,int find_prime) {  // find prime
    if(n <= 2)
        return 1;
    if (n % 2 == 0)
        return 0;
    else if (find_prime < n/2){
        if (n % find_prime == 0){
            find_prime = 3;
            return 0;
        }
        find_prime += 2;
        return check(n,find_prime);
    }
    else {
        find_prime = 3;
        return 1;
    }
}

void prime_fac(int n,int find_fac){
    int temp = 1;
    if(n == 1){
        return;
    }
    if (check(n,3) == 1) {
        printf("%d ",n);
        return;
    }
    if (n % 2 == 0){
        printf("2 ");
        return prime_fac(n/2,find_fac);
    } else if(n%find_fac == 0 ) {
        printf("%d ", find_fac);
        temp = find_fac;
        find_fac = 3;
        return prime_fac((n / temp),find_fac);
    } else{
        find_fac += 2;
    }


}


int main() {
    prime_fac(21,3);

}

#Q5

// Q3
#define _CRT_SECURE_NO_WARNINGS
// for visual studio only
#include<stdio.h>
// function protype
int gcd(int, int);
// global
int remainder = 1,temp;
// main function
int main()
{
	int val1 = 84, val2 = 49;
	printf("The GCD of %d and %d is %d", val1, val2, gcd(val1, val2));
	return 0;
}

int gcd(int val1, int val2) {
	if (val2 == 0)
		return 0;
	if (val1 % val2 == 0) 
		return val2;
	else{
		temp = val1 % val2;
		val1 = val2;
		return gcd(val1, temp);
	}
}

#Q6

#include <stdio.h>
int reverse(int a,int b){
    int x;
        if(a>0){
        x = a%10;
        b = (b * 10)+x;
        a = a/10;
        return(reverse(a,b));
    }
    return b;
}
int Check(int x){
    if(x == reverse(x,0)){
        return 1;
    }else{
        return 0;
    }
}
int main(){
    int num;
    //for (int i = 1;i<=5;i++){
    printf("Enter a integer: ");
    scanf("%d",&num);
    if(Check(num))
        printf("%d is Palindrome\n\n",num);
    else
        printf("%d is Not Palindrome\n\n",num);
    //}
}
